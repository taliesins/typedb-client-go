//
// Copyright (C) 2021 Vaticle
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: v2/protobuf/core/core_service.proto

package typedb_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_v2_protobuf_core_core_service_proto protoreflect.FileDescriptor

var file_v2_protobuf_core_core_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x24, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x76, 0x32,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x32, 0x9a, 0x07, 0x0a, 0x06, 0x54, 0x79, 0x70, 0x65, 0x44, 0x42, 0x12,
	0x7a, 0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x2f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x12, 0x6b, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x61,
	0x6c, 0x6c, 0x12, 0x2c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x71,
	0x1a, 0x2c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x65,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x28, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x6c, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x58, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x42, 0x10, 0x43, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5a, 0x24, 0x2e, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x64, 0x62, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_v2_protobuf_core_core_service_proto_goTypes = []interface{}{
	(*CoreDatabaseManager_Contains_Req)(nil), // 0: typedb.protocol.CoreDatabaseManager.Contains.Req
	(*CoreDatabaseManager_Create_Req)(nil),   // 1: typedb.protocol.CoreDatabaseManager.Create.Req
	(*CoreDatabaseManager_All_Req)(nil),      // 2: typedb.protocol.CoreDatabaseManager.All.Req
	(*CoreDatabase_Schema_Req)(nil),          // 3: typedb.protocol.CoreDatabase.Schema.Req
	(*CoreDatabase_Delete_Req)(nil),          // 4: typedb.protocol.CoreDatabase.Delete.Req
	(*Session_Open_Req)(nil),                 // 5: typedb.protocol.Session.Open.Req
	(*Session_Close_Req)(nil),                // 6: typedb.protocol.Session.Close.Req
	(*Session_Pulse_Req)(nil),                // 7: typedb.protocol.Session.Pulse.Req
	(*Transaction_Client)(nil),               // 8: typedb.protocol.Transaction.Client
	(*CoreDatabaseManager_Contains_Res)(nil), // 9: typedb.protocol.CoreDatabaseManager.Contains.Res
	(*CoreDatabaseManager_Create_Res)(nil),   // 10: typedb.protocol.CoreDatabaseManager.Create.Res
	(*CoreDatabaseManager_All_Res)(nil),      // 11: typedb.protocol.CoreDatabaseManager.All.Res
	(*CoreDatabase_Schema_Res)(nil),          // 12: typedb.protocol.CoreDatabase.Schema.Res
	(*CoreDatabase_Delete_Res)(nil),          // 13: typedb.protocol.CoreDatabase.Delete.Res
	(*Session_Open_Res)(nil),                 // 14: typedb.protocol.Session.Open.Res
	(*Session_Close_Res)(nil),                // 15: typedb.protocol.Session.Close.Res
	(*Session_Pulse_Res)(nil),                // 16: typedb.protocol.Session.Pulse.Res
	(*Transaction_Server)(nil),               // 17: typedb.protocol.Transaction.Server
}
var file_v2_protobuf_core_core_service_proto_depIdxs = []int32{
	0,  // 0: typedb.protocol.TypeDB.databases_contains:input_type -> typedb.protocol.CoreDatabaseManager.Contains.Req
	1,  // 1: typedb.protocol.TypeDB.databases_create:input_type -> typedb.protocol.CoreDatabaseManager.Create.Req
	2,  // 2: typedb.protocol.TypeDB.databases_all:input_type -> typedb.protocol.CoreDatabaseManager.All.Req
	3,  // 3: typedb.protocol.TypeDB.database_schema:input_type -> typedb.protocol.CoreDatabase.Schema.Req
	4,  // 4: typedb.protocol.TypeDB.database_delete:input_type -> typedb.protocol.CoreDatabase.Delete.Req
	5,  // 5: typedb.protocol.TypeDB.session_open:input_type -> typedb.protocol.Session.Open.Req
	6,  // 6: typedb.protocol.TypeDB.session_close:input_type -> typedb.protocol.Session.Close.Req
	7,  // 7: typedb.protocol.TypeDB.session_pulse:input_type -> typedb.protocol.Session.Pulse.Req
	8,  // 8: typedb.protocol.TypeDB.transaction:input_type -> typedb.protocol.Transaction.Client
	9,  // 9: typedb.protocol.TypeDB.databases_contains:output_type -> typedb.protocol.CoreDatabaseManager.Contains.Res
	10, // 10: typedb.protocol.TypeDB.databases_create:output_type -> typedb.protocol.CoreDatabaseManager.Create.Res
	11, // 11: typedb.protocol.TypeDB.databases_all:output_type -> typedb.protocol.CoreDatabaseManager.All.Res
	12, // 12: typedb.protocol.TypeDB.database_schema:output_type -> typedb.protocol.CoreDatabase.Schema.Res
	13, // 13: typedb.protocol.TypeDB.database_delete:output_type -> typedb.protocol.CoreDatabase.Delete.Res
	14, // 14: typedb.protocol.TypeDB.session_open:output_type -> typedb.protocol.Session.Open.Res
	15, // 15: typedb.protocol.TypeDB.session_close:output_type -> typedb.protocol.Session.Close.Res
	16, // 16: typedb.protocol.TypeDB.session_pulse:output_type -> typedb.protocol.Session.Pulse.Res
	17, // 17: typedb.protocol.TypeDB.transaction:output_type -> typedb.protocol.Transaction.Server
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_v2_protobuf_core_core_service_proto_init() }
func file_v2_protobuf_core_core_service_proto_init() {
	if File_v2_protobuf_core_core_service_proto != nil {
		return
	}
	file_v2_protobuf_core_core_database_proto_init()
	file_v2_protobuf_common_session_proto_init()
	file_v2_protobuf_common_transaction_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_protobuf_core_core_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_protobuf_core_core_service_proto_goTypes,
		DependencyIndexes: file_v2_protobuf_core_core_service_proto_depIdxs,
	}.Build()
	File_v2_protobuf_core_core_service_proto = out.File
	file_v2_protobuf_core_core_service_proto_rawDesc = nil
	file_v2_protobuf_core_core_service_proto_goTypes = nil
	file_v2_protobuf_core_core_service_proto_depIdxs = nil
}
